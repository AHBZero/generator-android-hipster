def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0
def playServicesVersion = '8.4.0'

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm:ss'Z'", TimeZone.getTimeZone("UTC"))
def gitTimestamp = 'git log -n 1 --format=%at'.execute([], rootDir).text.trim()


apply plugin: 'com.android.application'
<% if (language == 'kotlin') { %>
    apply plugin: 'kotlin-android'
    <% } %>
<% if (language == 'java') { %>
    apply plugin: "me.tatarka.retrolambda"
    apply plugin: "com.neenbedankt.android-apt"
    <% } %>

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId '<%= appPackage %>'
        minSdkVersion <%= androidMinSdkVersion %>
                targetSdkVersion <%= androidTargetSdkVersion %>

                multiDexEnabled true

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField 'String', 'GIT_SHA', "\"${gitSha}\""
//        buildConfigField 'long', 'GIT_TIMESTAMP', "${gitTimestamp}"
//        signingConfig signingConfigs.app

    }

    signingConfigs {
        app {
            storeFile file('<%= appPackage %>.keystore')
            storePassword 'android'
            keyAlias 'android'
            keyPassword 'android'
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/dependencies'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/notice'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/license'

    }

    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }

    productFlavors {

        internal {
            applicationId '<%= appPackage %>.internal'
            buildConfigField 'String', 'API_ENDPOINT', "\"http://example.com\""
        }
        production {
            applicationId '<%= appPackage %>'
            buildConfigField 'String', 'API_ENDPOINT', "\"http://example.com\""
        }
    }
}

<% if (language == 'kotlin') { %>
    kapt {
        generateStubs = true
    }
    <% } %>

<% if (language == 'java') { %>
    apt {
        arguments {
        }
    }

    retrolambda {
        jvmArgs "-noverify"
    }
    <% } %>

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:multidex:1.0.1"

    <% if (language == 'java') { %>
        retrolambdaConfig "net.orfjackal.retrolambda:retrolambda:2.1.0"
        apt 'com.google.dagger:dagger-compiler:2.0.2'
        <% } %>

    <% if (language == 'kotlin') { %>
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        compile "org.jetbrains.anko:anko-sdk15:$anko_version"
        compile "org.jetbrains.anko:anko-support-v4:$anko_version"
        kapt 'com.google.dagger:dagger-compiler:2.0.2'
        <% if (butterknife == true) { %>
            kapt 'com.jakewharton:butterknife:7.0.1'
            <% } %>
        <% } %>


    testCompile 'junit:junit:4.12'

    compile 'com.android.support:support-annotations:23.1.1'

    compile 'io.reactivex:rxkotlin:0.30.1'
    compile 'io.reactivex:rxjava:1.0.16'
    compile 'io.reactivex:rxandroid:1.0.0'

    compile 'com.google.code.gson:gson:2.4'


    <% if (nucleus == true) { %>
        compile 'info.android15.nucleus:nucleus:2.0.4'
        compile 'info.android15.nucleus:nucleus-support-v4:2.0.4'
        compile 'info.android15.nucleus:nucleus-support-v7:2.0.4'
        <% } %>

    compile 'com.google.dagger:dagger:2.0.2'
    provided 'org.glassfish:javax.annotation:10.0-b28'

    compile "com.squareup.retrofit2:retrofit:2.0.0-beta3"
    compile "com.squareup.retrofit2:converter-gson:2.0.0-beta3"

    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'

    <% if (language == 'glide') { %>  compile 'com.github.bumptech.glide:glide:3.6.1' <% } else if (language == 'picasso') { %>  compile 'com.squareup.picasso:picasso:2.5.2' <% } %>
    <% if (calligraphy == true) { %>  compile "uk.co.chrisjenx:calligraphy:2.1.0" <% } %>
    <% if (timber == true) { %>  compile "com.jakewharton.timber:timber:3.1.0" <% } %>
    <% if (jodatime == true) { %>  compile "net.danlew:android.joda:2.8.2" <% } %>
    <% if (jodamoney == true) { %>  compile 'org.joda:joda-money:0.10.0' <% } %>
    <% if (mixpanel == true) { %>  compile "com.mixpanel.android:mixpanel-android:4.6.4" <% } %>

    <% if (playServices.lenght > 0) { %>
        compile "com.google.android.gms:play-services-base:${playServicesVersion}"
        <% } %>
    <% if (playServices.indexOf('plus') != -1) { %>  compile "com.google.android.gms:play-services-plus:${playServicesVersion}" <% } %>
    <% if (playServices.indexOf('auth') != -1) { %>  compile "com.google.android.gms:play-services-auth:${playServicesVersion}" <% } %>
    <% if (playServices.indexOf('identity') != -1) { %>  compile "com.google.android.gms:play-services-identity:${playServicesVersion}" <% } %>
    <% if (playServices.indexOf('appindexing') != -1) { %>  compile "com.google.android.gms:play-services-appindexing:${playServicesVersion}" <% } %>
    <% if (playServices.indexOf('appinvite') != -1) { %>  compile "com.google.android.gms:play-services-appinvite:${playServicesVersion}" <% } %>
    <% if (playServices.indexOf('analytics') != -1) { %>  compile "com.google.android.gms:play-services-analytics:${playServicesVersion}" <% } %>
    <% if (playServices.indexOf('cast') != -1) { %>  compile "com.google.android.gms:play-services-cast:${playServicesVersion}" <% } %>
    <% if (playServices.indexOf('gcm') != -1) { %>  compile "com.google.android.gms:play-services-gcm:${playServicesVersion}" <% } %>
    <% if (playServices.indexOf('drive') != -1) { %>  compile "com.google.android.gms:play-services-drive:${playServicesVersion}" <% } %>
    <% if (playServices.indexOf('fitness') != -1) { %>  compile "com.google.android.gms:play-services-fitness:${playServicesVersion}" <% } %>
    <% if (playServices.indexOf('location') != -1) { %>  compile "com.google.android.gms:play-services-location:${playServicesVersion}" <% } %>
    <% if (playServices.indexOf('maps') != -1) { %>  compile "com.google.android.gms:play-services-maps:${playServicesVersion}" <% } %>
    <% if (playServices.indexOf('ads') != -1) { %>  compile "com.google.android.gms:play-services-ads:${playServicesVersion}" <% } %>
    <% if (playServices.indexOf('vision') != -1) { %>  compile "com.google.android.gms:play-services-vision:${playServicesVersion}" <% } %>
    <% if (playServices.indexOf('nearby') != -1) { %>  compile "com.google.android.gms:play-services-nearby:${playServicesVersion}" <% } %>
    <% if (playServices.indexOf('panorama') != -1) { %>  compile "com.google.android.gms:play-services-panorama:${playServicesVersion}" <% } %>
    <% if (playServices.indexOf('games') != -1) { %>  compile "com.google.android.gms:play-services-games:${playServicesVersion}" <% } %>
    <% if (playServices.indexOf('wearable') != -1) { %>  compile "com.google.android.gms:play-services-wearable:${playServicesVersion}" <% } %>
    <% if (playServices.indexOf('safetynet') != -1) { %>  compile "com.google.android.gms:play-services-safetynet:${playServicesVersion}" <% } %>
    <% if (playServices.indexOf('wallet') != -1) { %>  compile "com.google.android.gms:play-services-wallet:${playServicesVersion}" <% } %>
    <% if (playServices.indexOf('wearable') != -1) { %>  compile "com.google.android.gms:play-services-wearable:${playServicesVersion}" <% } %>

    <% if (butterknife == 'yes') { %>  compile 'com.jakewharton:butterknife:7.0.1'
        <% } %>

    internalCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    productionCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

}

<% if (language == 'kotlin') { %>
    buildscript {
        ext.kotlin_version = '1.0.0-beta-4584'
        ext.anko_version = '0.8.1'
        ext.support_version = '23.1.1'

        repositories {
            mavenCentral()
            jcenter()
        }
        dependencies {
            classpath 'com.android.tools.build:gradle:2.0.0-alpha3'
            classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
            classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        }
        <% } %>
}
