def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0
def playServicesVersion = '8.4.0'

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm:ss'Z'", TimeZone.getTimeZone("UTC"))
def gitTimestamp = 'git log -n 1 --format=%at'.execute([], rootDir).text.trim()

apply plugin: 'com.android.application'
<% if (language == 'kotlin') { %>apply plugin: 'kotlin-android<% } %>
<% if (language == 'java') { %>apply plugin: "me.tatarka.retrolambda"
apply plugin: "com.neenbedankt.android-apt"<% } %>

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId '<%= appPackage %>'
        minSdkVersion <%= androidMinSdkVersion %>
                targetSdkVersion <%= androidTargetSdkVersion %>

                multiDexEnabled true

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField 'String', 'GIT_SHA', "\"${gitSha}\""
//        buildConfigField 'long', 'GIT_TIMESTAMP', "${gitTimestamp}"
//        signingConfig signingConfigs.app

    }

    signingConfigs {
        app {
            storeFile file('<%= appPackage %>.keystore')
            storePassword 'android'
            keyAlias 'android'
            keyPassword 'android'
        }
    }

    buildTypes {
        all {
            buildConfigField 'String', 'API_ENDPOINT_LOCAL', "\"http://example.com\""
            buildConfigField 'String', 'API_ENDPOINT_INTERNAL', "\"http://example.com\""
            buildConfigField 'String', 'API_ENDPOINT_STAGING', "\"http://example.com\""
            buildConfigField 'String', 'API_ENDPOINT_PRODUCTION', "\"http://example.com\""
        }
        debug {

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            apply plugin: "signing"

            shrinkResources true
            minifyEnabled true

            signingConfig signingConfigs.app

        }
    }

    <% if (language == 'kotlin') { %>sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }<% } %>

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/dependencies'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/notice'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/license'
    }

    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }

    productFlavors {
        internal {
            applicationId '<%= appPackage %>.internal'
        }
        production {
            applicationId '<%= appPackage %>'
        }
    }
    <% if (language == 'java') { %>
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    <% } %>
    lintOptions {
        disable "InvalidPackage"
    }

}
<% if (language == 'kotlin') { %>
    kapt {
        generateStubs = true
    }
    <% } %>
<% if (language == 'java') { %>
apt {
    arguments {
    }
}
retrolambda {
    jvmArgs "-noverify"
}
<% } %>

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:multidex:1.0.1"
    testCompile 'junit:junit:4.12'

    compile 'com.android.support:support-annotations:23.1.1'
    compile 'io.reactivex:rxjava:1.0.16'
    compile 'io.reactivex:rxandroid:1.0.0'

    compile 'com.google.code.gson:gson:2.4'

    compile 'com.google.dagger:dagger:2.0.2'
    provided 'org.glassfish:javax.annotation:10.0-b28'

    compile "com.squareup.retrofit2:retrofit:2.0.0-beta3"
    compile "com.squareup.retrofit2:converter-gson:2.0.0-beta3"

    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'

    internalCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    productionCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    // android-hipster-needle-gradle-dependency


}

<% if (language == 'kotlin') { buildscript {
    ext.kotlin_version = '1.0.0-beta-4584'
    ext.anko_version = '0.8.1'
    ext.support_version = '23.1.1'

    repositories {
      mavenCentral()
        jcenter()
      }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.0.0-alpha3'
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}<% } %>
